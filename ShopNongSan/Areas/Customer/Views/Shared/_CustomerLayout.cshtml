@{
    Layout = null;

    // Đọc query tìm kiếm (tham số Q) an toàn
    var q = (Context?.Request?.Query["Q"].ToString() ?? string.Empty).Trim();

    // Lấy số sp trong giỏ an toàn (dynamic -> int)
    int cartCount = 0;
    try
    {
        if (ViewBag?.CartCount is int c) cartCount = c;
        else if (ViewBag?.CartCount != null) cartCount = Convert.ToInt32(ViewBag.CartCount);
    }
    catch { cartCount = 0; }
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@(ViewData["Title"] ?? "Nông Sản Sạch")</title>

    <!-- Bootstrap & Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet">

    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        :root {
            --brand-green: #2e7d32;
            --brand-green-2: #1b5e20;
            --brand-green-soft: #e8f5e9;
        }

        .bg-brand {
            background-color: var(--brand-green) !important;
        }

        .bg-brand-soft {
            background-color: var(--brand-green-soft) !important;
        }

        .text-brand {
            color: var(--brand-green) !important;
        }
        /* Navbar */
        .navbar .nav-link {
            color: rgba(255,255,255,.85) !important;
        }

            .navbar .nav-link:hover {
                color: #fff !important;
            }
        /* Brand button */
        .btn-brand {
            --bs-btn-color: #fff;
            --bs-btn-bg: var(--brand-green);
            --bs-btn-border-color: var(--brand-green);
            --bs-btn-hover-bg: var(--brand-green-2);
            --bs-btn-hover-border-color: var(--brand-green-2);
            --bs-btn-active-bg: var(--brand-green-2);
            --bs-btn-active-border-color: var(--brand-green-2);
        }
        /* Footer */
        footer .list-unstyled li {
            margin-bottom: .5rem;
        }

        footer a.text-underline, footer a.text-underline:hover {
            text-decoration: underline;
        }

        footer .container > :last-child {
            margin-bottom: 0;
        }

        /* Toast container: fixed top-right */
        .toast-container {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 1080;
        }

        .toast {
            border-radius: 12px;
            box-shadow: 0 8px 24px rgba(0,0,0,.18);
            overflow: hidden;
        }

            .toast .toast-body {
                font-weight: 500;
            }
    </style>

    <link rel="stylesheet" href="~/css/site.css" />
    @RenderSection("Head", required: false)
</head>
<body class="d-flex flex-column min-vh-100">

    <!-- HEADER -->
    <header class="bg-brand sticky-top">
        <nav class="navbar navbar-expand-lg navbar-dark container py-2">
            <a class="navbar-brand fw-bold text-white" asp-area="Customer" asp-controller="Home" asp-action="Index">Nông Sản Sạch</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#nav" aria-controls="nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div id="nav" class="collapse navbar-collapse">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Customer" asp-controller="Home" asp-action="Index"><i class="bi bi-house-door me-1"></i>Trang chủ</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Customer" asp-controller="SanPhams" asp-action="Index"><i class="bi bi-grid me-1"></i>Sản phẩm</a>
                    </li>
                </ul>
                @* Form tìm nhanh (bật lại nếu muốn) *@
                @*<form class="d-flex ms-lg-3 flex-grow-1" method="get" asp-area="Customer" asp-controller="SanPhams" asp-action="Index">
                    <input class="form-control" type="search" placeholder="Tìm kiếm sản phẩm..." name="Q" value="@q" />
                    <button class="btn btn-brand ms-2" type="submit">Tìm</button>
                </form>*@

                <ul class="navbar-nav ms-auto align-items-lg-center mt-2 mt-lg-0">
                    @if (User?.Identity?.IsAuthenticated ?? false)
                    {
                        <li class="nav-item me-2"><span class="nav-link">Xin chào, @User.Identity!.Name</span></li>
                        <li class="nav-item"><a class="nav-link" asp-area="Customer" asp-controller="DonHangs" asp-action="Index">Đơn hàng của tôi</a></li>
                        <li class="nav-item ms-lg-3">
                            <form asp-area="Customer" asp-controller="TaiKhoan" asp-action="DangXuat" method="post" class="mb-0">
                                @Html.AntiForgeryToken()
                                <button class="btn btn-outline-light" type="submit">Đăng xuất</button>
                            </form>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item"><a class="nav-link" asp-area="Customer" asp-controller="TaiKhoan" asp-action="DangNhap">Đăng nhập</a></li>
                        <li class="nav-item"><a class="nav-link" asp-area="Customer" asp-controller="TaiKhoan" asp-action="DangKy">Đăng ký</a></li>
                    }
                    <li class="nav-item ms-lg-3">
                        <a class="btn btn-outline-light position-relative" asp-area="Customer" asp-controller="GioHang" asp-action="Index">
                            <i class="bi bi-basket me-1"></i>Giỏ hàng
                            @if ((cartCount) > 0)
                            {
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    @cartCount
                                    <span class="visually-hidden">sản phẩm trong giỏ</span>
                                </span>
                            }
                        </a>
                    </li>
                    @if (User?.IsInRole("Admin") == true || User?.IsInRole("Staff") == true)
                    {
                        <li class="nav-item ms-lg-3"><a class="btn btn-warning" asp-area="Admin" asp-controller="Home" asp-action="Index">Vào Admin</a></li>
                    }
                </ul>
            </div>
        </nav>
    </header>

    <!-- MAIN -->
    <main class="container my-4 flex-grow-1">
        @RenderBody()
    </main>

    <!-- FOOTER -->
    <footer class="bg-brand text-white mt-auto py-4">
        <div class="container">
            <div class="row row-cols-1 row-cols-md-3 g-4 justify-content-center text-center">
                <div class="col">
                    <h5 class="fw-bold mb-3">Về Nông Sản Sạch</h5>
                    <p class="mb-0">Nông Sản Sạch cung cấp thực phẩm an toàn, tươi ngon, nguồn gốc rõ ràng. Chúng tôi đồng hành cùng bữa cơm Việt khỏe mạnh mỗi ngày.</p>
                </div>
                <div class="col">
                    <h5 class="fw-bold mb-3">Liên hệ</h5>
                    <ul class="list-unstyled mb-0">
                        <li><i class="bi bi-geo-alt-fill me-2"></i>123 Đường ABC, Quận 1, TP.HCM</li>
                        <li><i class="bi bi-telephone-fill me-2"></i>0123 456 789</li>
                        <li><i class="bi bi-envelope-fill me-2"></i>support@nongsansach.vn</li>
                        <li><i class="bi bi-clock-fill me-2"></i>Thứ 2 - CN: 7:00 - 21:00</li>
                    </ul>
                </div>
                <div class="col">
                    <h5 class="fw-bold mb-3">Kết nối với chúng tôi</h5>
                    <div class="d-flex justify-content-center gap-3 mb-3">
                        <a href="#" class="text-white fs-4" aria-label="Facebook"><i class="bi bi-facebook"></i></a>
                        <a href="#" class="text-white fs-4" aria-label="Instagram"><i class="bi bi-instagram"></i></a>
                        <a href="#" class="text-white fs-4" aria-label="YouTube"><i class="bi bi-youtube"></i></a>
                        <a href="#" class="text-white fs-4" aria-label="TikTok"><i class="bi bi-tiktok"></i></a>
                    </div>
                </div>
            </div>
            <hr class="border-light my-3" />
            <div class="text-center small">© @DateTime.Now.Year Nông Sản Sạch. All rights reserved.</div>
        </div>
    </footer>

    <!-- JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <!-- 🔔 Toast root (1 nơi duy nhất) -->
    <div id="toast-root" class="toast-container"></div>

    <script>
        // Định nghĩa 1 lần cho toàn site
        if (!window.__APP_TOAST_DEFINED__) {
          window.__APP_TOAST_DEFINED__ = true;

          window.showToast = function(message, type) {
            const root = document.getElementById('toast-root');
            if (!root || !message) return;

            // Dọn toast cũ (tránh xếp chồng nếu bạn muốn)
            root.querySelectorAll('.toast').forEach(t => {
              const inst = bootstrap.Toast.getInstance(t);
              if (inst) inst.hide();
              t.remove();
            });

            const bg = (type || 'success').toLowerCase();
            const bgClass = bg === 'success' ? 'bg-success text-white'
                           : bg === 'danger' || bg === 'error' ? 'bg-danger text-white'
                           : bg === 'warning' ? 'bg-warning text-dark'
                           : bg === 'info' ? 'bg-info text-white'
                           : bg === 'primary' ? 'bg-primary text-white'
                           : bg === 'secondary' ? 'bg-secondary text-white'
                           : bg === 'dark' ? 'bg-dark text-white'
                           : 'bg-success text-white';

            const iconClass = bg === 'success' ? 'bi-check-circle-fill'
                             : bg === 'danger' || bg === 'error' ? 'bi-exclamation-triangle-fill'
                             : bg === 'warning' ? 'bi-exclamation-circle-fill'
                             : 'bi-info-circle-fill';

            const el = document.createElement('div');
            el.className = `toast align-items-center ${bgClass} border-0`;
            el.setAttribute('role', 'alert');
            el.innerHTML = `
              <div class="d-flex">
                <div class="toast-body"><i class="bi ${iconClass} me-2"></i>${message}</div>
                <button type="button" class="btn-close ${bg === 'warning' ? '' : 'btn-close-white'} me-2 m-auto" data-bs-dismiss="toast"></button>
              </div>`;

            root.appendChild(el);
            const t = new bootstrap.Toast(el, { delay: 3000 });
            t.show();
            el.addEventListener('hidden.bs.toast', () => el.remove());
          }
        }

        // 👉 Chỉ layout đọc TempData và bắn 1 lần khi DOM sẵn sàng
        document.addEventListener('DOMContentLoaded', function () {
          @if (TempData["toast"] != null)
          {
                  var _msg = (TempData["toast"]?.ToString() ?? string.Empty).Replace("\n", "<br/>");
                  var _type = (TempData["toastType"]?.ToString() ?? "success");
              <text>
                  showToast('@Html.Raw(_msg)', '@_type');
              </text>
          }
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
